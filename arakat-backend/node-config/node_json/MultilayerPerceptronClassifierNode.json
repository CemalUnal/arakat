{
"name": "MultilayerPerceptronClassifier",
"id": 16,
"category": 8,
"family": 5,
"incompatible_families": [10,11,12,13],
"requires_udf": false,
"is_splitter": false,
"compatible_with_spark_pipeline": true,
"compatible_with_stream": false,
"compatible_stream_output_modes": [],
"produces_model": true,
"parameter_props": {"featuresCol": {"type": ["string"], "constraints":[], "default":"features"}, "labelCol": {"type": ["string"], "constraints":[], "default":"label"}, "predictionCol": {"type": ["string"], "constraints":[], "default":"prediction"},"maxIter": {"type": ["int"], "constraints":[1], "default":"100"},"tol": {"type": ["double"], "constraints":[7], "default":"1e-06"},"seed": {"type": ["int"], "constraints":[], "default": "None"},"layers": {"type": ["array"], "constraints":[73], "default": "[2,2,2]"},"blockSize": {"type": ["int"], "constraints":[55,73], "default":"128"},"stepSize": {"type": ["double"], "constraints":[58], "default":"0.3"},"solver": {"type": ["string"], "constraints":[61], "default":"'l-bfgs"},"probabilityCol": {"type": ["string"], "constraints":[], "default":"probability"},"rawPredictionCol": {"type": ["string"], "constraints":[], "default":"rawPrediction"}},
"df_constraints": [0,1,4,5,10,11,13,21],
"import": "from pyspark.ml.classification import MultilayerPerceptronClassifier",
"explanation": "Layers: Sizes of layers from input layer to output layer E.g., Array(780, 100, 10) means 780 inputs, one hidden layer with 100 neurons and output layer of 10 neurons. solver: The solver algorithm for optimization. Supported options: l-bfgs, gd. Added  rawPrediction, probability, probability and prediction columns to schema."
}
